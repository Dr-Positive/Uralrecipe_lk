import React, { useEffect, useState, useContext } from "react";
import { useSearchParams, useNavigate } from "react-router-dom";
import { confirmEmailChange } from "../http/authApi.js";
import { Context } from "../index.js";
import styles from "./ConfirmEmailPage.module.scss";
import { observer } from "mobx-react-lite";

const ConfirmEmailPage = observer(() => {
  const [searchParams] = useSearchParams();
  const navigate = useNavigate();
  const { user } = useContext(Context);

  const [message, setMessage] = useState("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Å—ã–ª–∫–∏...");
  const token = searchParams.get("token");

  useEffect(() => {
    async function confirm() {
      try {
        if (!token) {
          setMessage("‚ùå –û—à–∏–±–∫–∞: —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω.");
          return;
        }

        const res = await confirmEmailChange(token);

        if (res.success) {
          // üü¢ –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –Ω–æ–≤—ã–π JWT
          if (res.token) {
            localStorage.setItem("token", res.token);
          }

          // üü¢ –æ–±–Ω–æ–≤–ª—è–µ–º mobx store
          if (res.user) {
            user.setUser(res.user);
            user.setIsAuth(true);
          }

          setMessage("‚úÖ Email —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω!");
          // üîÅ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
          setTimeout(() => navigate("/profile"), 3000);
        } else {
          setMessage(res.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏.");
        }
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ email:", error);
        setMessage("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ email.");
      }
    }

    confirm();
  }, [token, navigate, user]);

  return (
    <div className={styles.container}>
      <div className={styles.input}>
        <h1>{message}</h1>
      </div>
    </div>
  );
});

export default ConfirmEmailPage;
